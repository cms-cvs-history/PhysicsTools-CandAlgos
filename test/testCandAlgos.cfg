process CandSelectorTest = {

  include "FWCore/MessageLogger/data/MessageLogger.cfi"

  service = Timing { } 

  untracked PSet maxEvents = { untracked int32 input = 10 }

  # this test assumes there are Z->e+e- in the input file
  source = PoolSource {
    untracked vstring fileNames = { "file:genevents.root" }
  }

  # select the 10 particles with the larget Pt
  module largestPtCands = LargestPtCandSelector {
    InputTag src = genParticleCandidates
    uint32 maxNumber = 10
  }

  # select only electrons, and save a vector of references 
  module electronRefs = PdgIdCandRefSelector {
    InputTag src = genParticleCandidates
    vint32 pdgId = { 11 }
  }

  # select only electrons, and save clones
  module electrons = PdgIdAndStatusCandSelector {
    InputTag src = genParticleCandidates
    vint32 pdgId = { 11 }
    vint32 status = { 1 }
  }

  # select only muons, and save a vector of references 
  module muonRefs = PdgIdCandRefSelector {
    InputTag src = genParticleCandidates
    vint32 pdgId = { 13 }
  }

  # select only muons, and save clones
  module muons = PdgIdAndStatusCandSelector {
    InputTag src = genParticleCandidates
    vint32 pdgId = { 13 }
    vint32 status = { 1 }
  }

  # merge muons and electrons into leptons
  module leptons = CandMerger {
    VInputTag src = { electrons, muons }
  }	

  module bestElectrons = EtaPtMinCandViewSelector {
    InputTag src = electronRefs
    double ptMin = 20
    double etaMin = -2.5
    double etaMax = 2.5
  }

  # make Z->e+e-
  module zCands = CandShallowCloneCombiner {
    string decay = "electrons@+ electrons@-"
    string cut = "20 < mass < 200"
  }

  # make Z->e+e-
  module zCandsFromView= CandViewShallowCloneCombiner {
    string decay = "electrons@+ electrons@-"
    string cut = "20 < mass < 200"
  }

  module zCandsFromMassRance = MassRangeCandShallowCloneCombiner {
    string decay = "electrons@+ electrons@-"
    double massMin = 20
    double massMax = 200
  }

  # make exotic decay to three electron
  module exoticCands = CandShallowCloneCombiner {
    string decay = "electrons@+ electrons@- electrons@+"
    string cut = "20 < mass < 400"
  }

   module electronMatch = MCTruthDeltaRMatcher {
    InputTag src = electrons
    InputTag matched = genParticleCandidates
    double distMin = 0.15
    vint32 matchPDGId = { 11 } # electron
  }

   module muonMatch = MCTruthDeltaRMatcher {
    InputTag src = muons 
    InputTag matched = genParticleCandidates
    double distMin = 0.15
    vint32 matchPDGId = { 13 } # muons
  }

   module leptonMatch = MCTruthDeltaRMatcher {
    InputTag src = leptons
    InputTag matched = genParticleCandidates
    double distMin = 0.15
    vint32 matchPDGId = { 11, 13 } # electron or muon
  }

  module zCandMatch = MCTruthCompositeMatcher {
    InputTag src = zCands
    VInputTag matchMaps = { electronMatch }
  }

  module zCandMatchClones = CandMatchedCloneProducer {
    InputTag src = zCands
    VInputTag matchMaps = { electronMatch }
  }

  module zGenParticles = PdgIdAndStatusCandDecaySelector {
    InputTag src = genParticleCandidates
    vint32 pdgId = { 23 }
    vint32 status = { 3 }
  }
 
  module leptonIsolations = CandPtIsolationProducer {
    InputTag src = leptons
    InputTag elements = genParticleCandidates
    double dRMin = 0.15
    double dRMax = 0.3
    double dzMax = 10000
    double d0Max = 10
    double ptMin = 0.1
  }
 
  module leptonIsolationsFromView = CandViewPtIsolationProducer {
    InputTag src = leptons
    InputTag elements = genParticleCandidates
    double dRMin = 0.15
    double dRMax = 0.3
    double dzMax = 10000
    double d0Max = 10
    double ptMin = 0.1
  }
 
  module isolatedLeptons = PtMinAssociatedVariableMaxCutCandSelector { 
    InputTag src = leptonIsolations
    double ptMin = 10
    double max = 0.2
  }

  module leptonRefs = PtMinCandViewSelector {
    InputTag src = leptons
    double ptMin = 1.0
  }

  module leptonRefClones = PtMinCandRefToBaseCloneSelector {
    InputTag src = leptonRefs
    double ptMin = 1.5
  }

  module out = PoolOutputModule {
    untracked string fileName = "cands.root"
  }

  module printEventNumber = AsciiOutputModule { 
  }

  path select = { 
    largestPtCands, 
    electronRefs, 
    electrons,
    muonRefs, muons,
    leptons, 
    bestElectrons,
    zCands, zCandsFromView, zCandsFromMassRance, exoticCands,
    electronMatch, muonMatch, leptonMatch, zCandMatch, zCandMatchClones,
    zGenParticles,
    leptonIsolations, leptonIsolationsFromView, isolatedLeptons,
    leptonRefs, leptonRefClones
  }
 	
  endpath ep = { printEventNumber, out }
}
