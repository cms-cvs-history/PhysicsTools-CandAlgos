process CandSelectorTest = {

  include "FWCore/MessageLogger/data/MessageLogger.cfi"

  service = Timing { } 

  untracked PSet maxEvents = { untracked int32 input = 1000 }

  # this test assumes there are Z->e+e- in the input file
  source = PoolSource {
    untracked vstring fileNames = { "file:genevents.root" }
  }

  # select the 10 particles with the larget Pt
  module largestPtCands = LargestPtCandViewSelector {
    InputTag src = genParticles
    uint32 maxNumber = 10
  }

  # select only electrons, and save a vector of references 
  module electronRefs = PdgIdCandViewSelector {
    InputTag src = genParticles
    vint32 pdgId = { 11 }
  }

  # select only electrons, and save clones
  module electrons = PdgIdAndStatusCandViewSelector {
    InputTag src = genParticles
    vint32 pdgId = { 11 }
    vint32 status = { 1 }
  }

  # select only muons, and save clones
  module muons = PdgIdAndStatusCandViewSelector {
    InputTag src = genParticles
    vint32 pdgId = { 13 }
    vint32 status = { 1 }
  }

  # merge muons and electrons into leptons
  module leptons = CandRefMerger {
    VInputTag src = { electrons, muons }
  }	

  module bestElectrons = EtaPtMinCandViewSelector {
    InputTag src = electrons
    double ptMin = 20
    double etaMin = -2.5
    double etaMax = 2.5
  }

  # make Z->e+e-
  module zCands = CandViewShallowCloneCombiner {
    string decay = "electrons@+ electrons@-"
    string cut = "20 < mass < 200"
  }

  module selectedZCands = CompositeCandAndSelector {
    InputTag src = zCands
    PSet cut1 = {
      string cut = "pt > 20"
    }
    PSet cut2 = {
      string cut = "pt > 20"
    }
  }

  module zCandsFromMassRange = MassRangeCandViewShallowCloneCombiner {
    string decay = "electrons@+ electrons@-"
    double massMin = 20
    double massMax = 200
  }

  # make exotic decay to three electron
  module exoticCands = CandViewShallowCloneCombiner {
    string decay = "electrons@+ electrons@- electrons@+"
    string cut = "20 < mass < 400"
  }	

  module muonIsolations = CandPtIsolationProducerNew {
    InputTag src = muons
    InputTag elements = genParticles
    double dRMin = 0.15
    double dRMax = 0.3
    double dzMax = 10000
    double d0Max = 10
    double ptMin = 0.1
  }

  module electronIsolations = CandPtIsolationProducerNew {
    InputTag src = electrons
    InputTag elements = genParticles
    double dRMin = 0.15
    double dRMax = 0.3
    double dzMax = 10000
    double d0Max = 10
    double ptMin = 0.1
  }

  module leptonIsolations = ValeMapFloatMerger {
    VInputTag src = { muonIsolations, electronIsolations }
  }

  module isolatedLeptonRefs = AssociatedVariableMaxCutCandSelectorNew {
    InputTag src = leptons
    InputTag var = leptonIsolations
    double max = 0.5
  }

  module isolatedLeptons = CandViewMerger {
    VInputTag src = { isolatedLeptonRefs }
  }

  module bestLeptons = PtMinCandViewSelector {
    InputTag src = leptons
    double ptMin = 1.0
  }

  module electronMatch = MCTruthDeltaRMatcherNew {
    InputTag src = electrons
    InputTag matched = genParticles
    double distMin = 0.15
    vint32 matchPDGId = { 11 } # electron
  }

  module muonMatch = MCTruthDeltaRMatcherNew {
    InputTag src = muons 
    InputTag matched = genParticles
    double distMin = 0.15
    vint32 matchPDGId = { 13 } # muons
  }

  module zCandMatch = MCTruthCompositeMatcherNew {
    InputTag src = zCands
    VInputTag matchMaps = { electronMatch, muonMatch }
    vint32 matchPDGId = { 23 } # Z
  }

  module mcMatch = GenParticleMatchMerger {
    VInputTag src = { electronMatch, muonMatch, zCandMatch }
  }

  module out = PoolOutputModule {
    untracked string fileName = "cands.root"
  }

  module printEventNumber = AsciiOutputModule { 
  }

  path select = { 
    largestPtCands, 
    electrons,
    muons,
    leptons, 
    bestElectrons,
    zCands, 
    selectedZCands,
    zCandsFromMassRange, 
    exoticCands,
    muonIsolations,
    electronIsolations,
    leptonIsolations,
    isolatedLeptonRefs, isolatedLeptons,
    bestLeptons, 
    electronMatch,
    muonMatch,
    zCandMatch,
    mcMatch
  }
 	
  endpath ep = { printEventNumber, out }
}
